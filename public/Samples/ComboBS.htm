<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Column Step Line Combination Chart | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <style type="text/css"></style>
  </head>
  <body>
    <div id="chartDiv" style="max-width: 740px;height: 400px;margin: 0px auto;"></div>

    <script type="text/javascript">
      /*
A combination of bar and stepline series types.
Learn how to:

  - Draw a combo chart with different series types.
*/
      // JS
      var chart;

      JSC.fetch('./resources/unemploymentRateUS.csv')
        .then(function(response) {
          return response.text();
        })
        .then(function(text) {
          var data = JSC.csv2Json(text);
          chart = renderChart(makeSeries(data));
        });

      function renderChart(series) {
        return JSC.chart('chartDiv', {
          annotations: [
            {
              label_text: '<b>Unemployment Rate in US</b>',
              position: 'top left'
            }
          ],
          legend: {
            template: '%icon %name',
            position: 'top right'
          },
          defaultSeries: {
            opacity: 0.6,
            lastPoint: { label_text: '%seriesName' }
          },
          defaultPoint: {
            marker_type: 'circle',
            tooltip: '<b>%SeriesName {%xValue:date yyyy}</b><br>Unemployment rate: <b>%yValue%</b>'
          },
          yAxis: {
            alternateGridFill: 'none',
            defaultTick_label_text: '%value%'
          },
          xAxis: { scale_type: 'time' },
          series: series
        });
      }

      function makeSeries(data) {
        var key = JSC.nest().key('year');
        var series = [
          { name: 'California', type: 'column', points: key.rollup('CA').points(data) },
          { name: 'Texas', type: 'column', points: key.rollup('TX').points(data) },
          { name: 'New York', type: 'column', points: key.rollup('NY').points(data) },
          { name: 'Florida', type: 'column', points: key.rollup('FL').points(data) },
          { name: 'US', type: 'line step', opacity: 1, points: key.rollup('US').points(data) }
        ];
        return series;
      }
    </script>
  </body>
</html>
