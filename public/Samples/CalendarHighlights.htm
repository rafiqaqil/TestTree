<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Pattern Highlights Calendar Chart | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <script type="text/javascript" src="../jsc/modules/types.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <style type="text/css">
      /*CSS*/
    </style>
  </head>
  <body>
    <div id="chartDiv" style="max-width: 740px;height: 180px;margin: 0px auto;"></div>

    <script type="text/javascript">
      /*
Update highlights using the FP API.
Learn how to:

  - Update calendar highlights dynamically.
  - Display holiday calendarPatterns.
*/
      // JS

      //Get a default chart palette
      var chartPalette = JSC.getPalette();
      //Some data for the chart
      var items = [
        {
          name: 'Alex',
          pattern: {
            date: [
              '6/5/20',
              '6/6/20',
              '6/7/20',
              '6/8/20',
              '6/9/20',
              '6/10/20',
              '6/11/20',
              '6/12/20',
              '9/5/20',
              '9/6/20',
              '9/7/20',
              '9/8/20'
            ]
          }
        },
        {
          name: 'Mike',
          pattern: {
            date: [
              '1/1/20',
              '1/2/20',
              '1/3/20',
              '1/4/20',
              '1/5/20',
              '6/9/20',
              '6/10/20',
              '6/11/20',
              '6/12/20',
              '6/13/20',
              '6/14/20',
              '6/15/20'
            ]
          }
        },
        {
          name: 'Jeff',
          pattern: {
            date: [
              '2/1/20',
              '2/2/20',
              '2/3/20',
              '2/4/20',
              '2/5/20',
              '2/6/20',
              '2/7/20',
              '2/8/20',

              '7/9/20',
              '7/10/20',
              '7/11/20',
              '7/12/20',
              '7/13/20',
              '7/14/20',
              '7/15/20'
            ]
          }
        }
      ];
      //Assign colors to data array.
      items.forEach(function(item, i) {
        item.color = chartPalette[i];
        //To keep track visibility
        item.visible = true;
      });

      var chartConfig = {
        debug: true,
        type: 'calendar year solid',
        calendar_range: ['1/1/20', '12/31/20'],
        annotations: [
          {
            label_text: '<b>Vacation Days 2020</b>',
            position: 'top'
          }
        ],
        yAxis_label: { text: '2020', style_fontSize: 25 },
        defaultSeries: {
          shape_innerPadding: 0,
          legendEntry_visible: false,
          defaultPoint: { outline_color: '#323232', opacity: 0.08 }
        },
        legend: {
          header: 'Days Off,,Name',
          title_label_text: 'Click entries below to <br>toggle vacation highlights',
          customEntries: items.map(function(item, i) {
            return {
              name: item.name,
              id: 'lid-' + i,
              icon_color: item.color,
              value: item.pattern.date.length.toString(),
              events: {
                click: function() {
                  var item = items[i];
                  if (item.visible) {
                    hideDays(i);
                    item.visible = false;
                  } else {
                    showDays(i);
                    item.visible = true;
                  }
                }
              }
            };
          })
        }
      };

      //Add a legend entry for holidays
      chartConfig.legend.customEntries.push({
        name: 'Holidays',
        value: '',
        lineAbove: { width: 1 },
        icon: { color: '#ffb77d' }
      });

      // Initialize the chart
      var chart;
      makeHolidayPoints(initChart);
      function initChart(holidayPoints) {
        chartConfig.series = [{ points: holidayPoints }];
        chart = JSC.chart('chartDiv', chartConfig, function(c) {
          showAll(c);
        });
      }

      function showAll(chartRef) {
        for (var i = 0; i < items.length; i++) {
          showDays(i, chartRef);
        }
      }
      function hideAll() {
        for (var i = 0; i < items.length; i++) {
          hideDays(i);
        }
      }
      function hideDays(i) {
        var highlight = chart.highlights('id-' + i);
        highlight && highlight.remove();
        // Gray out legend entry
        chart
          .legends(0)
          .entries('lid-' + i)
          .options({ color: '#bababa' });
      }
      function showDays(i, chartRef) {
        var id = 'id-' + i,
          config = items[i];
        var c = chartRef || chart;
        var highlight = c.highlights(id);
        config.id = id;
        config.outline = { width: 0 };
        if (!highlight) {
          c.highlights.add(config);
        }
        // Restore legend entry color
        c.legends(0)
          .entries('lid-' + i)
          .options({ color: 'black' });
      }

      function makeHolidayPoints(callback) {
        JSC.fetch('./resources/usHolidays.json.txt')
          .then(function(response) {
            return response.json();
          })
          .then(function(data) {
            var holidayPoints = data.map(function(item) {
              return {
                date: item.pattern,
                fill: '#ffb77d',
                opacity: 0.8,
                outline: {
                  dashStyle: 'dot',
                  color: '#ffa14d',
                  width: 1
                },
                tooltip: '<b>%name</b> ' + item.name
              };
            });
            callback(holidayPoints);
          });
      }
    </script>
  </body>
</html>
