<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Animated Label Icons | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <style type="text/css">
      /*CSS*/
    </style>
  </head>
  <body>
    <div
      id="labelsWrapper"
      style="max-width: 700px;height: 60px;margin: 0px auto;display:flex;flex-wrap:wrap;justify-content:space-around;"
    >
      <div id="labelDiv1" style="max-width: 200px;height: 60px;display:inline-block">
        <div id="icon" style="max-width: 100px;display:inline-block; vertical-align:super"></div>
        <div id="labelDiv11" style="width: 51px;display:inline-block"></div>
      </div>
      <div id="labelDiv2" style="width: 51px;display:inline-block"></div>
      <div id="labelDiv3" style="width: 51px;display:inline-block"></div>
      <div id="labelDiv4" style="width: 51px;display:inline-block"></div>
      <div id="labelDiv5" style="width: 76px;display:inline-block"></div>
    </div>
    <div id="chartDiv" style="max-width: 700px;height: 200px;margin: 0px auto;"></div>

    <script type="text/javascript">
      /*
Using JSC.label() for KPI elements with animated SVG icons.
Learn how to:

  - Use animated icons with JSC.label().
*/
      // JS
      var arrowIcon = '';
      var date = new Date().getTime();
      var points = [];
      var INTERVAL_ID = null;

      for (var i = 0; i < 50; i++) {
        points.push({ y: Math.round(Math.random() * 100), x: new Date(date) });
        date = date + 24 * 3600000 * 1;
      }

      var chart;

      JSC.chart(
        'chartDiv',
        {
          defaultSeries_type: 'spline',
          legend_visible: false,
          xAxis_visible: false,
          yAxis: {
            formatString: 'n0',
            alternateGridFill: 'none',
            line_visible: false,
            defaultTick: { line_visible: false }
          },

          series: [
            {
              color: '#1e88e5',
              legendEntry_attributes: {
                indicator: "<icon name='material/navigation/arrow-drop-up' size=14 fill=green>"
              },
              states_hover_line_width: 2,
              defaultPoint: {
                tooltip: '%value',
                marker_visible: false,
                focusGlow: {
                  color: '#1e88e5',
                  opacity: 1,
                  width: 3
                }
              },
              points: points
            }
          ],
          toolbar: {
            items: {
              Stop: {
                position: 'inside left top',
                type: 'option',
                icon_name: 'system/default/pause',
                boxVisible: true,
                label_text: 'Pause',
                events_change: playPause,
                states_select_label_text: 'Play',
                states_select_icon_name: 'system/default/play'
              }
            }
          }
        },
        function(c) {
          chart = c;
          updateLabels();
          startUpdate();
        }
      );

      function playPause(val) {
        if (val === true) {
          clearInterval(INTERVAL_ID);
        } else {
          startUpdate();
        }
      }
      function addDataPoint() {
        chart.series(0).points.add({ y: Math.round(Math.random() * 100), x: new Date(date) }, { shift: true });
        date = date + 24 * 3600000 * 1;
        updateLabels();
      }

      function startUpdate() {
        INTERVAL_ID = setInterval(function() {
          addDataPoint();
        }, 1000);
      }

      function updateLabels() {
        var series = chart.series(0);
        JSC.label('icon', getIcon(), { preserve: true });
        JSC.label('labelDiv11', wrapSpanText(series.points(49).replaceTokens('%value')));
        JSC.label('labelDiv2', wrapSpanText(series.replaceTokens('%max')) + '<br><span style="color:gray">Max</span>');
        JSC.label('labelDiv3', wrapSpanText(series.replaceTokens('%min')) + '<br><span style="color:gray">Min</span>');
        JSC.label(
          'labelDiv4',
          wrapSpanText(series.replaceTokens('%average')) + '<br><span style="color:gray">Average</span>'
        );
        JSC.label('labelDiv5', wrapSpanText(series.replaceTokens('%sum')) + '<br><span style="color:gray">Sum</span>');
        function wrapSpanText(txt) {
          return '<span style="font-size:30px">' + txt + '</span>';
        }
        function getIcon() {
          if (
            chart
              .series(0)
              .points(49)
              .options('y') >
            chart
              .series(0)
              .points(48)
              .options('y')
          ) {
            arrowIcon = '<icon name=linearicons/arrow-up size=24 fill=#43a047 rotate=45 animation=true>';
          } else {
            arrowIcon = '<icon name=linearicons/arrow-up size=24 fill=#ef5350 rotate=135 animation=true>';
          }
          return arrowIcon;
        }
      }
    </script>
  </body>
</html>
