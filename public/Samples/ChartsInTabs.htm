<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Charts In Tabs | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <style type="text/css">
      .title {
        text-align: center;
        font-size: 20px;
      }
      .description {
        font-size: 14px;
        color: gray;
        width: 400px;
        text-align: right;
        float: right;
      }
      .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
      }

      .tab button {
        background-color: inherit;
        float: left;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 14px 16px;
      }

      .tab button:hover {
        background-color: #ddd;
      }

      .tab button.active {
        background-color: #ccc;
      }

      .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
        text-align: center;
        height: 350px;
      }

      .active {
        display: block;
      }
    </style>
  </head>
  <body>
    <div class="wrapper">
      <p class="title">COâ‚‚ emissions by fuel type, tonnes</p>
      <div class="tab">
        <button id="chart4button" class="tablinks active">Coal</button>
        <button id="chart3button" class="tablinks">Oil</button>
        <button id="chart5button" class="tablinks">Gas</button>
        <button id="chart1button" class="tablinks">Cement</button>
        <button id="chart2button" class="tablinks">Flaring</button>
      </div>

      <div id="chart1" class="tabcontent"></div>
      <div id="chart2" class="tabcontent"></div>
      <div id="chart3" class="tabcontent"></div>
      <div id="chart4" class="tabcontent active"></div>
      <div id="chart5" class="tabcontent"></div>
    </div>

    <script type="text/javascript">
      /*
Switching between charts inside tabs.
Learn how to:

  - Draw area line charts in tabs.
*/
      // JS

      /*
       * Warning messages mean that the containers for the tab charts are hidden when the charts are initialized.
       * To disable these messages, set width and height values to the containers.
       */

      function chartConfig(series) {
        return {
          debug: false,
          type: 'arealine',
          width: '100%',
          defaultPoint: {
            marker_visible: false,
            tooltip: '%icon %seriesName: <b>%yValue t</b>'
          },
          defaultSeries_lastPoint_yAxisTick: {
            label_text: '<span style="width:75px">%xValue: {(%yValue/1000000000):n1}B t</span>',
            axisId: 'secondY'
          },
          legend_visible: false,
          yAxis: [
            {
              id: 'mainY',
              scale_range: [0, 16000000000],
              defaultTick_label_text: '{%value:a} t',
              alternateGridFill: 'none'
            },
            {
              id: 'secondY',
              scale_range: [0, 16000000000],
              scale_syncWith: 'mainY',
              orientation: 'opposite',
              defaultTick: {
                enabled: false,
                gridLine_visible: false
              },
              alternateGridFill: 'none'
            }
          ],
          xAxis: {
            crosshair_enabled: true,
            formatString: 'd',
            defaultTick_gridLine_visible: false
          },
          chartArea_boxVisible: false,
          series: series
        };
      }

      JSC.fetch('./resources/CO2-by-source.csv')
        .then(function(response) {
          return response.text();
        })
        .then(function(text) {
          var data = JSC.csv2Json(text);
          registerChart('chart1', makeSeries(data, 'Cement'));
          registerChart('chart2', makeSeries(data, 'Flaring'));
          registerChart('chart3', makeSeries(data, 'Oil'));
          registerChart('chart4', makeSeries(data, 'Coal'));
          registerChart('chart5', makeSeries(data, 'Gas'));
        });
      var charts = {};

      function registerChart(id, series) {
        charts[id] = JSC.chart(id, chartConfig(series));
      }

      function makeSeries(data, type) {
        return [
          {
            name: type,
            points: JSC.nest()
              .key('year')
              .pointRollup(function(key, val) {
                var values = val[0];
                return {
                  x: parseInt(key),
                  y: values[type]
                };
              })
              .points(data)
          }
        ];
      }

      function disable(el) {
        el.className = el.className.replace(' active', '');
      }

      function enable(el) {
        el.className += ' active';
      }

      function openChart(evt, chartId) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName('tabcontent');
        for (i = 0; i < tabcontent.length; i++) {
          disable(tabcontent[i]);
        }

        tablinks = document.getElementsByClassName('tablinks');
        for (i = 0; i < tablinks.length; i++) {
          disable(tablinks[i]);
        }

        enable(document.getElementById(chartId));
        enable(evt.currentTarget);

        charts[chartId].redraw();
      }

      function bindEvents() {
        var button1 = document.getElementById('chart1button');
        var button2 = document.getElementById('chart2button');
        var button3 = document.getElementById('chart3button');
        var button4 = document.getElementById('chart4button');
        var button5 = document.getElementById('chart5button');

        button1.addEventListener('click', function(e) {
          openChart(e, 'chart1');
        });
        button2.addEventListener('click', function(e) {
          openChart(e, 'chart2');
        });
        button3.addEventListener('click', function(e) {
          openChart(e, 'chart3');
        });
        button4.addEventListener('click', function(e) {
          openChart(e, 'chart4');
        });
        button5.addEventListener('click', function(e) {
          openChart(e, 'chart5');
        });
      }

      bindEvents();
    </script>
  </body>
</html>
