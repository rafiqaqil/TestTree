<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Web Service Csv Data | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <style type="text/css">
      /*CSS*/
    </style>
  </head>
  <body>
    <div id="chartDiv" style="max-width: 740px;height: 400px;margin: 0px auto;"></div>

    <script type="text/javascript">
      /*
Line chart loaded from a CSV data web service.
Learn how to:

  - Populate line charts with CSV data from a web service.
*/
      // JS
      var chart = JSC.chart('chartDiv', {
        debug: true,
        type: 'line',
        title_label_text: 'Average Life Expectancy (Years)',
        annotations: [
          {
            label_text: 'Source: Centers for Disease Control and Prevention',
            position: 'bottom'
          }
        ],
        defaultSeries_states_hover_line_width: 2,
        defaultPoint: { marker_visible: false, tooltip: '<span style="width:50px">%seriesName</span> %icon %yvalue' },
        xAxis: {
          crosshair_enabled: true,
          scale_type: 'time',
          formatString: 'yyyy'
        },
        legend: { position: 'inside top left', template: '%icon %name' }
      });
      JSC.fetch('https://data.cdc.gov/api/views/w9j2-ggv5/rows.csv?accessType=DOWNLOAD').then(function(response) {
        response.text().then(function(t) {
          var parsedResult = JSC.parseCsv(t);

          var toPoints = function(rows) {
            return rows.map(function(row) {
              return { x: '1/1/' + row[0], y: row[3] };
            });
          };

          //Filter out unused data
          var allRaces = parsedResult.data.filter(function(row) {
            return row[1] === 'All Races';
          });
          var male = allRaces.filter(function(row) {
            return row[2] === 'Male';
          });
          var female = allRaces.filter(function(row) {
            return row[2] === 'Female';
          });
          //Add data to chart.
          chart.options({
            series: [
              {
                name: 'Male',
                points: toPoints(male)
              },
              {
                name: 'Female',
                points: toPoints(female)
              }
            ]
          });
        });
      });
    </script>
  </body>
</html>
